<?php

namespace DoctrineProxies\__CG__;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class DisciplinePlan extends \DisciplinePlan implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'semester', 'hasExam', 'hasCoursework', 'hasCourseProject', 'hasDesignAssignment', 'hasEssay', 'hasHomeTest', 'hasAudienceTest', 'hoursAll', 'hoursLecture', 'hoursLaboratory', 'hoursPractical', 'hoursSolo', 'countLecture', 'countLaboratory', 'countPractical', 'id', 'discipline', 'studyplan'];
        }

        return ['__isInitialized__', 'semester', 'hasExam', 'hasCoursework', 'hasCourseProject', 'hasDesignAssignment', 'hasEssay', 'hasHomeTest', 'hasAudienceTest', 'hoursAll', 'hoursLecture', 'hoursLaboratory', 'hoursPractical', 'hoursSolo', 'countLecture', 'countLaboratory', 'countPractical', 'id', 'discipline', 'studyplan'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (DisciplinePlan $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function jsonSerialize()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'jsonSerialize', []);

        return parent::jsonSerialize();
    }

    /**
     * {@inheritDoc}
     */
    public function setHasExam($hasExam)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHasExam', [$hasExam]);

        return parent::setHasExam($hasExam);
    }

    /**
     * {@inheritDoc}
     */
    public function getHasExam()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHasExam', []);

        return parent::getHasExam();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setDiscipline(\Discipline $discipline = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDiscipline', [$discipline]);

        return parent::setDiscipline($discipline);
    }

    /**
     * {@inheritDoc}
     */
    public function getDiscipline()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDiscipline', []);

        return parent::getDiscipline();
    }

    /**
     * {@inheritDoc}
     */
    public function setStudyplan(\Studyplan $studyplan = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStudyplan', [$studyplan]);

        return parent::setStudyplan($studyplan);
    }

    /**
     * {@inheritDoc}
     */
    public function getStudyplan()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStudyplan', []);

        return parent::getStudyplan();
    }

    /**
     * {@inheritDoc}
     */
    public function getSemester()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSemester', []);

        return parent::getSemester();
    }

    /**
     * {@inheritDoc}
     */
    public function setSemester($semester)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSemester', [$semester]);

        return parent::setSemester($semester);
    }

    /**
     * {@inheritDoc}
     */
    public function isHasCoursework()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isHasCoursework', []);

        return parent::isHasCoursework();
    }

    /**
     * {@inheritDoc}
     */
    public function setHasCoursework($hasCoursework)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHasCoursework', [$hasCoursework]);

        return parent::setHasCoursework($hasCoursework);
    }

    /**
     * {@inheritDoc}
     */
    public function isHasCourseProject()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isHasCourseProject', []);

        return parent::isHasCourseProject();
    }

    /**
     * {@inheritDoc}
     */
    public function setHasCourseProject($hasCourseProject)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHasCourseProject', [$hasCourseProject]);

        return parent::setHasCourseProject($hasCourseProject);
    }

    /**
     * {@inheritDoc}
     */
    public function isHasDesignAssignment()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isHasDesignAssignment', []);

        return parent::isHasDesignAssignment();
    }

    /**
     * {@inheritDoc}
     */
    public function setHasDesignAssignment($hasDesignAssignment)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHasDesignAssignment', [$hasDesignAssignment]);

        return parent::setHasDesignAssignment($hasDesignAssignment);
    }

    /**
     * {@inheritDoc}
     */
    public function isHasEssay()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isHasEssay', []);

        return parent::isHasEssay();
    }

    /**
     * {@inheritDoc}
     */
    public function setHasEssay($hasEssay)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHasEssay', [$hasEssay]);

        return parent::setHasEssay($hasEssay);
    }

    /**
     * {@inheritDoc}
     */
    public function isHasHomeTest()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isHasHomeTest', []);

        return parent::isHasHomeTest();
    }

    /**
     * {@inheritDoc}
     */
    public function setHasHomeTest($hasHomeTest)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHasHomeTest', [$hasHomeTest]);

        return parent::setHasHomeTest($hasHomeTest);
    }

    /**
     * {@inheritDoc}
     */
    public function isHasAudienceTest()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isHasAudienceTest', []);

        return parent::isHasAudienceTest();
    }

    /**
     * {@inheritDoc}
     */
    public function setHasAudienceTest($hasAudienceTest)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHasAudienceTest', [$hasAudienceTest]);

        return parent::setHasAudienceTest($hasAudienceTest);
    }

    /**
     * {@inheritDoc}
     */
    public function getHoursAll()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHoursAll', []);

        return parent::getHoursAll();
    }

    /**
     * {@inheritDoc}
     */
    public function setHoursAll($hoursAll)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHoursAll', [$hoursAll]);

        return parent::setHoursAll($hoursAll);
    }

    /**
     * {@inheritDoc}
     */
    public function getHoursLecture()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHoursLecture', []);

        return parent::getHoursLecture();
    }

    /**
     * {@inheritDoc}
     */
    public function setHoursLecture($hoursLecture)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHoursLecture', [$hoursLecture]);

        return parent::setHoursLecture($hoursLecture);
    }

    /**
     * {@inheritDoc}
     */
    public function getHoursPractical()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHoursPractical', []);

        return parent::getHoursPractical();
    }

    /**
     * {@inheritDoc}
     */
    public function setHoursPractical($hoursPractical)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHoursPractical', [$hoursPractical]);

        return parent::setHoursPractical($hoursPractical);
    }

    /**
     * {@inheritDoc}
     */
    public function getHoursLaboratory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHoursLaboratory', []);

        return parent::getHoursLaboratory();
    }

    /**
     * {@inheritDoc}
     */
    public function setHoursLaboratory($hoursLaboratory)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHoursLaboratory', [$hoursLaboratory]);

        return parent::setHoursLaboratory($hoursLaboratory);
    }

    /**
     * {@inheritDoc}
     */
    public function getHoursSolo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHoursSolo', []);

        return parent::getHoursSolo();
    }

    /**
     * {@inheritDoc}
     */
    public function setHoursSolo($hoursSolo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHoursSolo', [$hoursSolo]);

        return parent::setHoursSolo($hoursSolo);
    }

    /**
     * {@inheritDoc}
     */
    public function getCountLecture()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCountLecture', []);

        return parent::getCountLecture();
    }

    /**
     * {@inheritDoc}
     */
    public function setCountLecture($countLecture)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCountLecture', [$countLecture]);

        return parent::setCountLecture($countLecture);
    }

    /**
     * {@inheritDoc}
     */
    public function getCountLaboratory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCountLaboratory', []);

        return parent::getCountLaboratory();
    }

    /**
     * {@inheritDoc}
     */
    public function setCountLaboratory($countLaboratory)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCountLaboratory', [$countLaboratory]);

        return parent::setCountLaboratory($countLaboratory);
    }

    /**
     * {@inheritDoc}
     */
    public function getCountPractical()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCountPractical', []);

        return parent::getCountPractical();
    }

    /**
     * {@inheritDoc}
     */
    public function setCountPractical($countPractical)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCountPractical', [$countPractical]);

        return parent::setCountPractical($countPractical);
    }

    /**
     * {@inheritDoc}
     */
    public function fillFromJson($json)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'fillFromJson', [$json]);

        return parent::fillFromJson($json);
    }

}
